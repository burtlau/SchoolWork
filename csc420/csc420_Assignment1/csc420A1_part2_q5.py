# -*- coding: utf-8 -*-
"""CSC402_part2_Q5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kJ2jvZIXj_FYCX6Ucb56owRh2-DJHRUy
"""
import numpy as np
import matplotlib.pyplot as plt
import cv2

def add_gaussian_noise(image, mean=0, sd=1):
  gaussian_noise = (np.random.normal(mean, sd ,size=image.shape)).astype('uint8')
  image += gaussian_noise
  return image

if __name__ == "__main__":
  img = cv2.imread('window.jpg')
  gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
  edges = cv2.Canny(gray, threshold1=75, threshold2=100)

  fig = plt.figure()
  ax1 = fig.add_subplot(241)
  ax2 = fig.add_subplot(245)
  ax3 = fig.add_subplot(242)
  ax4 = fig.add_subplot(246)
  ax5 = fig.add_subplot(243)
  ax6 = fig.add_subplot(247)
  ax7 = fig.add_subplot(244)
  ax8 = fig.add_subplot(248)

  ax1.imshow(gray,cmap = 'gray')
  ax1.title.set_text('Original'), ax1.set_xticks([]), ax1.set_yticks([])

  ax2.imshow(edges,cmap = 'gray')
  ax2.title.set_text('Canny'), ax2.set_xticks([]), ax2.set_yticks([])

  image_with_noise1 = add_gaussian_noise(gray, 0, 5)
  ax3.imshow(image_with_noise1,cmap = 'gray')
  ax3.title.set_text('Noise1'), ax3.set_xticks([]), ax3.set_yticks([])

  ax4.imshow(cv2.Canny(image_with_noise1, threshold1=75, threshold2=100),cmap = 'gray')
  ax4.title.set_text('Canny1'), ax4.set_xticks([]), ax4.set_yticks([])

  image_with_noise2 = add_gaussian_noise(gray, 0, 8)
  ax5.imshow(image_with_noise2,cmap = 'gray')
  ax5.title.set_text('Noise2'), ax5.set_xticks([]), ax5.set_yticks([])

  ax6.imshow(cv2.Canny(image_with_noise2, threshold1=75, threshold2=100), cmap = 'gray')
  ax6.title.set_text('Canny2'), ax6.set_xticks([]), ax6.set_yticks([])

  image_with_noise3 = add_gaussian_noise(gray, 0, 19)
  ax7.imshow(image_with_noise3,cmap = 'gray')
  ax7.title.set_text('Noise3'), ax7.set_xticks([]), ax7.set_yticks([])

  ax8.imshow(cv2.Canny(image_with_noise3, threshold1=75, threshold2=100),cmap = 'gray')
  ax8.title.set_text('Canny3'), ax8.set_xticks([]), ax8.set_yticks([])

  plt.show()